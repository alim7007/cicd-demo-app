name: Node.js CI

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev", "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # node-version: [18.x, 20.x] 
        node-version: [18.x] # using matrix for showing how it works ${{ matrix.node-version }}

    env:
      IMAGE_NAME: "my-app:1.0"
      CONTAINER_NAME: "my-app-test"

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: app/package-lock.json

    - name: Install dependencies
      run: npm ci
      working-directory: app


    - name: Run unit tests with local server
      working-directory: app
      run: |
        echo "üîß Starting server in background..."
        node server.js & echo $! > .pidfile

        echo "‚è≥ Waiting for server to start..."
        sleep 3

        echo "‚úÖ Running tests..."
        npm test

        echo "üõë Stopping local test server..."
        kill $(cat .pidfile)


    - name: Build Docker image
      run: docker build -t $IMAGE_NAME .


    - name: Clean up old container if exists
      run: docker rm -f $CONTAINER_NAME || true

    - name: Run built Docker image
      run: docker run -d --rm --name $CONTAINER_NAME -p 3000:3000 $IMAGE_NAME

    - name: Wait for container to start
      run: sleep 5

    - name: Health check on container
      run: |
        curl -f http://localhost:3000/health || (docker logs $CONTAINER_NAME && exit 1)

    - name: Stop container
      run: docker stop $CONTAINER_NAME

    # --- Cleanup ---
    - name: Docker system prune
      if: always()
      run: docker system prune -f
